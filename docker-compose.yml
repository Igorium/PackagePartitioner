version: '3.4'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'

  kafka:
    image: wurstmeister/kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://kafka:19092,
        LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-kafka}:9092

      KAFKA_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://:19092,
        LISTENER_DOCKER_EXTERNAL://:9092

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
        LISTENER_DOCKER_EXTERNAL:PLAINTEXT

      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # 3 topics - one per each DB partition
      KAFKA_CREATE_TOPICS: "partition-topic-0:1:1,partition-topic-1:1:1,partition-topic-2:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  postgres:
    image: postgres
    ports:
      - '5432:5432'
    restart: always
    volumes:
      - ./dbscripts/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    environment:
      POSTGRES_USER: 'box'
      POSTGRES_PASSWORD: 'box'
      POSTGRES_DB: 'box'

  packagepartitioner:
    build:
      context: .
      dockerfile: PackagePartitioner/Dockerfile
    ports:
      - '8080:80'
    depends_on:
      - kafka

  packageconsumer:
    build:
      context: .
      dockerfile: PackageConsumer/Dockerfile
    environment:
      DB_CONNECTION_STRING: "host=postgres;port=5432;database=box;username=box;password=box"
    depends_on:
      - kafka
      - postgres

  packagereader:
    build:
      context: .
      dockerfile: PackageReader/Dockerfile
    ports:
      - '8081:80'
    environment:
      DB_CONNECTION_STRING: "host=postgres;port=5432;database=box;username=box;password=box"
    depends_on:
      - postgres
